cmake_minimum_required(VERSION 3.10.0)

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -Wall -fsanitize=address,signed-integer-overflow")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -Os")

set(SQLiteCpp_version 3.1.1)
set(nlohmann_json_version 3.9.1)
set(cpp_httplib_version 0.7.15)
set(spdlog_version 1.8.1)
project(server)

FILE(GLOB Source *.cc)
add_executable(server ${Source})

target_compile_definitions(server PRIVATE cpp_httplib_version="${cpp_httplib_version}")

if (APPLE)
  set(OPENSSL_ROOT_DIR ${OPENSSL_ROOT_DIR} /usr/local/opt/openssl)
  set(OPENSSL_INCLUDE_DIR ${OPENSSL_ROOT_DIR}/include)
  set(OPENSSL_CRYPTO_LIBRARY ${OPENSSL_ROOT_DIR}/lib/libcrypto.dylib)
  set(OPENSSL_SSL_LIBRARY ${OPENSSL_ROOT_DIR}/lib/libssl.dylib)
endif()

add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/3rdparty/SQLiteCpp-${SQLiteCpp_version})

target_include_directories(server PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty/SQLiteCpp-${SQLiteCpp_version}/include)
target_include_directories(server PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty/SQLiteCpp-${SQLiteCpp_version}/sqlite3)
target_include_directories(server PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty/nlohmann-json-${nlohmann_json_version}/include)
target_include_directories(server PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty/cpp-httplib-${cpp_httplib_version})
target_include_directories(server PRIVATE ${CMAKE_CURRENT_LIST_DIR}/3rdparty/spdlog-${spdlog_version}/include)

target_include_directories(server PRIVATE include)

if (APPLE)
  target_include_directories(server PRIVATE /usr/local/opt/spdlog/include)
  target_include_directories(server PRIVATE /usr/local/opt/fmt/include)
  target_include_directories(server PRIVATE /usr/local/opt/nlohmann-json/include)
endif()

if (APPLE)
  target_link_directories(server PRIVATE /usr/local/opt/spdlog/lib)
  target_link_directories(server PRIVATE /usr/local/opt/fmt/lib)
  target_link_directories(server PRIVATE /usr/local/opt/nlohmann-json/lib)
  target_link_directories(server PRIVATE /usr/local/opt/sqlite/lib)
  target_link_directories(server PRIVATE /usr/local/opt/zlib/lib)
endif()

target_link_libraries(server PRIVATE SQLiteCpp sqlite3 pthread dl z)

if (CMAKE_BUILD_TYPE STREQUAL release)
  add_custom_command(TARGET server POST_BUILD COMMAND strip server)
endif ()

message("System info: ${CMAKE_SYSTEM}")
message("System name: ${CMAKE_SYSTEM_NAME}")
message("System processor: ${CMAKE_SYSTEM_PROCESSOR}")
message("System host name: ${CMAKE_HOST_SYSTEM_NAME}")
message("CXX Standard: ${CMAKE_CXX_STANDARD}")
